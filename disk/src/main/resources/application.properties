spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url =jdbc:mysql://localhost:3306/homework?useUnicode=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.username =root
spring.datasource.password =123
server.contextPath:/disk
spring.datasource.driverClassName =com.mysql.jdbc.Driver
# mybatis
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
# 配置页面以及其路径
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
#连接池的配置信息
#初始化时建立物理连接的个数
spring.datasource.initialSize=5
#最小连接池数量
spring.datasource.minIdle=5
#最大连接池数量
spring.datasource.maxActive=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.maxWait=6000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.validationQuery=SELECT 1 FROM DUAL 
spring.datasource.testWhileIdle=true
#申请连接时不执行validationQuery来检测连接是否有效
spring.datasource.testOnBorrow=false
#归还连接时不执行validationQuery来检测连接是否有效
spring.datasource.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。
#在mysql5.5以下的版本中没有PSCache功能，建议关闭掉
spring.datasource.poolPreparedStatements=false
#指定每个连接上PSCache的大小
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#配置监控统计拦截的filters
#spring.datasource.filters=stat,wall,log4j
#logging.level.com.henu.party.mapper=debug